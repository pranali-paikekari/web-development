<!DOCTYPE html>
<html lang="en">
<head>
    <meta charset="UTF-8">
    <meta name="viewport" content="width=device-width, initial-scale=1.0">
    <title>Tic Tac Toe</title>
    <style>
        /* CSS Styles */
        body {
            font-family: Arial, sans-serif;
            display: flex;
            justify-content: center;
            align-items: center;
            height: 100vh;
            margin: 0;
            background-color:#548687;
            /*background-color: #93c572;*/
        }

        h1 {
            text-align:center;
        }

        #game-board {
            display: grid;
            grid-template-columns: repeat(3, 100px);
            grid-template-rows: repeat(3, 100px);
            gap: 5px;
            margin: 20px;
        }
        .cell {
           
               border-radius: 0.5rem;
              border: none;
           box-shadow: 0 0 1rem rgba(0, 0, 0, 0.3);
           
           color: #b0413e;
    
        
            height: 100px;
            background-color: #ffffc7;;
            display: flex;
            justify-content: center;
            align-items: center;
            font-size: 3rem;
            cursor: pointer;
            
            transition: background-color 0.2s;
        }

        .cell:hover {
            background-color: #ddd;
        }

        button {
            margin-top: 20px;
            padding: 10px 20px;
            font-size: 16px;
            padding: 1rem;
            cursor: pointer;
            background-color:black;
            color: white;
        }
    </style>
</head>
<body>
    <h1>Tic Tac Toe</h1>
    <div id="game-board">
        <div class="cell" data-index="0"></div>
        <div class="cell" data-index="1"></div>
        <div class="cell" data-index="2"></div>
        <div class="cell" data-index="3"></div>
        <div class="cell" data-index="4"></div>
        <div class="cell" data-index="5"></div>
        <div class="cell" data-index="6"></div>
        <div class="cell" data-index="7"></div>
        <div class="cell" data-index="8"></div>
    </div>
    <button id="reset-btn">Reset Game</button>

    <script>
        // JavaScript Logic
        const cells = document.querySelectorAll('.cell'); //for class we use queryselectorall
        const resetBtn = document.getElementById('reset-btn'); //for id we use getelemnetbyid
        let currentPlayer = 'X';
        let gameBoard = ['', '', '', '', '', '', '', '', ''];
        let gameActive = true;

        const checkWinner = () => {
            // Winning combinations (index of cells)
            const winningCombinations = [
                [0, 1, 2], [3, 4, 5], [6, 7, 8],  // Rows
                [0, 3, 6], [1, 4, 7], [2, 5, 8],  // Columns
                [0, 4, 8], [2, 4, 6]               // Diagonals
            ];

            for (const combination of winningCombinations) {
                const [a, b, c] = combination;
                if (gameBoard[a] && gameBoard[a] === gameBoard[b] && gameBoard[a] === gameBoard[c]) {
                    gameActive = false;
                    alert(`${gameBoard[a]} wins!`);
                   
                    return;
                }
            }

            if (!gameBoard.includes('')) {
                gameActive = false;
                alert("It's a draw!");
            }
        };

        const handleCellClick = (event) => {
            const index = event.target.getAttribute('data-index');
            if (gameBoard[index] || !gameActive) return;

            gameBoard[index] = currentPlayer;
            event.target.textContent = currentPlayer;

            checkWinner();

            // Switch player
            currentPlayer = currentPlayer === 'X' ? 'O' : 'X';
        };

        const resetGame = () => {
            gameBoard = ['', '', '', '', '', '', '', '', ''];
            currentPlayer = 'X';
            gameActive = true;
            cells.forEach(cell => cell.textContent = '');
        };

        // Event listeners for cells
        cells.forEach(cell => cell.addEventListener('click', handleCellClick));

        // Reset button functionality
        resetBtn.addEventListener('click', resetGame);

     //   Selecting element=	querySelectorAll() and getElementById()
     //Game state variables=	currentPlayer, gameBoard, gameActive
     //Checking for a winner=	checkWinner()
      //Handling cell clicks=	handleCellClick()
       //Resetting the game	=resetGame()
      //Event listeners =addEventListener() for clicks//
    </script>
</body>
</html>



